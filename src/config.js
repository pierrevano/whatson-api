require("dotenv").config();

const baseURL = {
  allocine: "https://www.allocine.fr",
  assets: "https://whatson-assets.vercel.app",
  betaseries: "https://www.betaseries.com",
  betaseriesAPI: "https://api.betaseries.com",
  dailymotion: "https://www.dailymotion.com/embed/video/",
  imdb: "https://www.imdb.com",
  letterboxd: "https://letterboxd.com",
  metacritic: "https://www.metacritic.com",
  mojo: "https://www.boxofficemojo.com",
  render: "https://status.render.com",
  rottenTomatoes: "https://www.rottentomatoes.com",
  senscritique: "https://www.senscritique.com",
  theTvdb: "https://www.thetvdb.com",
  theTvdbAPI: "https://api4.thetvdb.com/v4",
  tmdb: "https://www.themoviedb.org",
  tmdbAPI: "https://api.themoviedb.org/3",
  trakt: "https://trakt.tv",
  traktAPI: "https://api.trakt.tv",
  tvtime: "https://www.tvtime.com",
  vercel: "https://www.vercel-status.com",
  whatsonAPI: "https://whatson-api.onrender.com",
  whatsonAPICircleCI: "https://whatson-api-circleci.onrender.com",
};

const config = {
  /* Credentials */
  betaseriesApiKey: process.env.BETASERIES_API_KEY,
  digestSecretValue: process.env.DIGEST_SECRET_VALUE,
  internalApiKey: process.env.INTERNAL_API_KEY,
  mongoDbCredentials: process.env.CREDENTIALS,
  traktApiKey: process.env.TRAKT_API_KEY,
  theTvdbApiKey: process.env.THETVDB_API_KEY,
  tmdbApiKey: process.env.THEMOVIEDB_API_KEY,

  /* Database settings */
  mongoDbCredentialsLastPart:
    "@cluster0.yxe57eq.mongodb.net/?retryWrites=true&w=majority",
  dbName: "whatson",
  collectionName: "data",
  collectionNameApiKey: "apikey",
  collectionNamePreferences: "preferences",

  /* Rate limit settings */
  points: 1000,
  higher_points: 10000,
  duration: 60 * 60, // 1 hour in seconds
  blockDuration: 60 * 60, // 1 hour in seconds

  /* Global settings */
  IPinfo: "https://ipinfo.io/country",
  webhooksURL: "https://hook.eu2.make.com/cie2nax47q0fpjri8ivcx5hoal6gtziu",
  appendToResponse:
    "critics_rating_details,episodes_details,last_episode,next_episode,highest_episode,lowest_episode",

  limit: 15,
  maximumThreshold: {
    default: 30,
    metacritic_or_rotten_tomatoes: 95,
    allocine_critics: 80,
  },
  maxSeasonsNumber: 5,
  minimumActiveItems: 150,
  page: 1,
  retries: 20,
  retryDelay: 5000,
  userAgentChrome:
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.5449.179 Safari/537.36",
  userAgentChromeAlt:
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_5_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.5449.179 Safari/537.36",
  userAgentFirefox:
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:117.0) Gecko/20100101 Firefox/117.0",
  userAgentFirefoxAlt:
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 11.5; rv:117.0) Gecko/20100101 Firefox/117.0",
  userAgentSafari:
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_5_2) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.0 Safari/606.1.15",
  userAgentSafariAlt:
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.5449.179 Safari/538.36",
  heapLimit: 1500,

  /* CircleCI settings */
  circleLimitPerDay: 1500,
  circleLimitPerInstance: 50,

  /* Tests settings */
  baseURLLocal: "http://localhost:8081",
  baseURLRemote: process.env.WHATSON_API_URL,
  maxLimit: 900,
  maxLimitRemote: 500,
  checkItemsNumber: true,
  keysToCheck: [
    "_id",
    "allocine",
    "betaseries",
    "directors",
    "episodes_details",
    "genres",
    "highest_episode",
    "id",
    "image",
    "imdb",
    "is_active",
    "is_adult",
    "certification",
    "item_type",
    "last_episode",
    "letterboxd",
    "lowest_episode",
    "metacritic",
    "mojo",
    "networks",
    "next_episode",
    "original_title",
    "platforms_links",
    "popularity_average",
    "production_companies",
    "ratings_average",
    "release_date",
    "rotten_tomatoes",
    "runtime",
    "seasons_number",
    "senscritique",
    "status",
    "tagline",
    "thetvdb",
    "title",
    "tmdb",
    "trailer",
    "trakt",
    "tv_time",
    "updated_at",
  ],
  ratingsKeys: [
    "allocine",
    "betaseries",
    "imdb",
    "letterboxd",
    "metacritic",
    "rotten_tomatoes",
    "senscritique",
    "tmdb",
    "trakt",
    "tv_time",
  ],
  allowedQueryParams: [
    "api_key",
    "append_to_response",
    "cinema_id",
    "critics_certified",
    "directors",
    "filtered_seasons",
    "runtime",
    "genres",
    "is_active",
    "is_adult",
    "item_type",
    "limit",
    "minimum_ratings",
    "must_see",
    "networks",
    "page",
    "platforms",
    "popularity_filters",
    "production_companies",
    "ratings_filters",
    "release_date",
    "seasons_number",
    "status",
    "title",
    "top_ranking_order",
    "mojo_rank_order",
    "mojo_lifetime_gross_order",
    "users_certified",
  ],
  skippedItems: ["tt16358384"],
  margin: 10,
  maxResponseTime: 6000,
  maxNullValues: 600,
  maxNullReleaseDates: 150,
  minimumNumberOfItems: {
    default: 25,
    mojo: 15,
    mustSee: 3,
    nextEpisodes: 20,
    platformsLinksMovies: 5,
    popularity: 10,
    senscritiqueItems: 3,
    trailer: 20,
    traktItems: 3,

    allocine: 7,
    imdb: 4,
    betaseries: 3,
    metacritic: 4,
    rottenTomatoes: 4,
    letterboxd: 3,
    senscritique: 3,
    tmdb: 3,
    trakt: 3,
    tvtime: 3,
    thetvdb: 3,
  },
  maximumIsActiveItems: 400,
  maxPopularityDiff: 20,
  ratings_filters:
    "allocine_critics,allocine_users,betaseries_users,imdb_users,metacritic_critics,metacritic_users,rottentomatoes_critics,rottentomatoes_users,letterboxd_users,senscritique_users,tmdb_users,trakt_users,tvtime_users",
  timeout: 500000,

  /* Services settings */
  services: [
    {
      name: "What's on? API",
      url: `${baseURL.whatsonAPI}?api_key=${process.env.INTERNAL_API_KEY}`,
    },
    {
      name: "What's on? API CircleCI",
      url: `${baseURL.whatsonAPICircleCI}?api_key=${process.env.INTERNAL_API_KEY}`,
    },
    { name: "Render", url: baseURL.render },
    { name: "Vercel", url: baseURL.vercel },

    { name: "AlloCin√©", url: baseURL.allocine },
    { name: "BetaSeries", url: baseURL.betaseries },
    { name: "IMDb", url: baseURL.imdb },
    { name: "TMDB", url: baseURL.tmdb },
    { name: "Metacritic", url: baseURL.metacritic },
    { name: "Rotten Tomatoes", url: baseURL.rottenTomatoes },
    { name: "Letterboxd", url: baseURL.letterboxd },
    { name: "SensCritique", url: baseURL.senscritique },
    { name: "Trakt", url: baseURL.trakt },
    { name: "TV Time", url: baseURL.tvtime },
    { name: "TheTVDB", url: baseURL.theTvdb },
    { name: "Mojo", url: baseURL.mojo },
  ],

  /* URLs and paths settings */
  baseURLAllocine: baseURL.allocine,
  baseURLAllocineFilms: `${baseURL.allocine}/film/aucinema/`,
  baseURLAllocineSeries: `${baseURL.allocine}/series/top/`,
  baseURLAssets: baseURL.assets,
  baseURLBetaseriesAPIFilms: `${baseURL.betaseriesAPI}/movies/movie`,
  baseURLBetaseriesAPISeries: `${baseURL.betaseriesAPI}/shows/display`,
  baseURLBetaseriesFilm: `${baseURL.betaseries}/film/`,
  baseURLBetaseriesSerie: `${baseURL.betaseries}/serie/`,
  baseURLCriticDetailsFilms: "/film/fichefilm-",
  baseURLCriticDetailsSeries: "/series/ficheserie-",
  baseURLDailymotion: baseURL.dailymotion,
  baseURLIMDB: `${baseURL.imdb}/title/`,
  baseURLLetterboxdFilm: `${baseURL.letterboxd}/film/`,
  baseURLMetacriticFilm: `${baseURL.metacritic}/movie/`,
  baseURLMetacriticSerie: `${baseURL.metacritic}/tv/`,
  baseURLMetacriticBackend: "https://backend.metacritic.com/reviews/metacritic",
  baseURLRottenTomatoesFilm: `${baseURL.rottenTomatoes}/m/`,
  baseURLRottenTomatoesSerie: `${baseURL.rottenTomatoes}/tv/`,
  baseURLSensCritiqueFilm: `${baseURL.senscritique}/film/-/`,
  baseURLSensCritiqueSerie: `${baseURL.senscritique}/serie/-/`,
  baseURLTheaters: `${baseURL.allocine}/_/showtimes/theater-`,
  baseURLTheTVDBAPI: baseURL.theTvdbAPI,
  baseURLTheTVDBFilm: `${baseURL.theTvdb}/movies/`,
  baseURLTheTVDBSerie: `${baseURL.theTvdb}/series/`,
  baseURLTMDBAPI: baseURL.tmdbAPI,
  baseURLTMDBFilm: `${baseURL.tmdb}/movie/`,
  baseURLTMDBSerie: `${baseURL.tmdb}/tv/`,
  baseURLTraktAPI: baseURL.traktAPI,
  baseURLTraktFilm: `${baseURL.trakt}/movies/`,
  baseURLTraktSerie: `${baseURL.trakt}/shows/`,
  baseURLTVTimeSerie: `${baseURL.tvtime}/show/`,
  baseURLTypeFilms: "/film/fichefilm_gen_cfilm=",
  baseURLTypeSeries: "/series/ficheserie_gen_cserie=",
  endURLCriticDetails: "/critiques/presse/",

  filmsIdsFilePath: "./src/assets/films_ids.txt",
  filmsPopularityPath: "popularity_ids_films.txt",
  getIdsFilePath: "./src/data/getIds.sh",
  seriesIdsFilePath: "./src/assets/series_ids.txt",
  seriesPopularityPath: "popularity_ids_series.txt",

  /* Mojo specific settings */
  mojo: {
    baseURL: baseURL.mojo,
    urlToFetch: "/chart/ww_top_lifetime_gross",
    tableRowsClasses: ".a-bordered.a-horizontal-stripes.a-size-base",

    maxIterations: 30,
    offset: 200,
  },

  /* Ratings settings */
  ratingsValues: {
    minimum: {
      allocine: 0,
      betaseries: 0,
      imdb: 0,
      metacriticUsers: 0,
      metacriticCritics: 10,
      rottenTomatoes: 0,
      letterboxd: 0,
      senscritique: 0,
      tmdb: 0,
      trakt: 0,
      tvtime: 0,
    },

    maximum: {
      allocine: 5,
      betaseries: 5,
      imdb: 10,
      metacriticUsers: 10,
      metacriticCritics: 100,
      rottenTomatoes: 100,
      letterboxd: 5,
      senscritique: 10,
      tmdb: 10,
      trakt: 100,
      tvtime: 10,
    },
  },

  /* Search settings */
  keysToCheckForSearch: [
    "allocineid",
    "betaseriesid",
    "imdbid",
    "letterboxdid",
    "metacriticid",
    "rottentomatoesid",
    "senscritiqueid",
    "thetvdbid",
    "title",
    "tmdbid",
    "traktid",
    "tvtimeid",
  ],
};

module.exports = { config };
